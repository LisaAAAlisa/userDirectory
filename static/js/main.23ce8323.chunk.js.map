{"version":3,"sources":["components/Jumbotron/index.js","utils/API.js","components/Table/index.js","App.js","index.js"],"names":["Jumbotron","className","obj","getRandomUsers","axios","get","Table","state","root","employees","sort","changeFunction","event","search","target","value","newArray","filter","element","name","first","includes","last","setState","sortByThis","toBeSorted","elementA","elementB","nameA","toUpperCase","nameB","this","getUsers","API","then","res","data","results","console","log","onChange","placeholder","scope","onClick","map","src","picture","thumbnail","alt","phone","email","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sJAaeA,EAXG,WACd,OACI,sBAAKC,UAAU,YAAf,UACI,oBAAIA,UAAU,YAAd,gCACA,mBAAGA,UAAU,OAAb,qDACA,oBAAIA,UAAU,a,iDCARC,EALN,CACRC,eAAgB,WACd,OAAOC,IAAMC,IAAI,kDCiFRC,E,4MAjFXC,MAAQ,CACJC,KAAM,GACNC,UAAW,GACXC,MAAM,G,EAcVC,eAAiB,SAAAC,GACb,IAAIC,EAASD,EAAME,OAAOC,MAEtBC,EAAW,EAAKT,MAAMC,KAAKS,QAAO,SAAAC,GAAO,OAAIA,EAAQC,KAAKC,MAAMC,SAASR,IAAWK,EAAQC,KAAKG,KAAKD,SAASR,MACnH,EAAKU,SAAS,CAACd,UAAWO,K,EAG9BQ,WAAW,WACP,IAAIC,EAAa,EAAKlB,MAAMC,KAC5BiB,EAAWf,MAAK,SAACgB,EAAUC,GACvB,IAAIC,EAAQF,EAASP,KAAKC,MAAMS,cAC5BC,EAAQH,EAASR,KAAKC,MAAMS,cAEhC,OAAGD,EAAQE,EACA,EAAKvB,MAAMG,KAAO,GAAK,EAE/BoB,EAAQF,EACA,EAAKrB,MAAMG,MAAQ,EAAI,EAG3B,KAEX,EAAKa,SAAS,CAACb,MAAO,EAAKH,MAAMG,OACjC,EAAKa,SAAS,CAACd,UAAWgB,K,kEAjC1BM,KAAKC,a,iCAGE,IAAD,OACNC,EAAI9B,iBACC+B,MAAK,SAAAC,GAAG,OAAI,EAAKZ,SAAS,CAACd,UAAW0B,EAAIC,KAAKC,aAC/CH,MAAK,SAAAC,GAAG,OAAI,EAAKZ,SAAS,CAACf,KAAM,EAAKD,MAAME,eAC5CyB,MAAK,SAAAC,GAAG,OAAIG,QAAQC,IAAI,EAAKhC,MAAME,gB,+BA+BxC,OACI,qCACA,qBAAKR,UAAU,oDAAf,SACI,sBAAMA,UAAU,cAAhB,SACI,uBACAA,UAAU,uBACVuC,SAAUT,KAAKpB,eACf8B,YAAY,uBAIpB,wBAAOxC,UAAU,mBAAjB,UACI,gCACI,+BACI,oBAAIyC,MAAM,MAAV,mBACA,qBAAIA,MAAM,MAAV,kBAAqB,wBAAQzC,UAAU,eAAe0C,QAASZ,KAAKP,WAA/C,qBACrB,oBAAIkB,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,wBAGR,gCACKX,KAAKxB,MAAME,UAAUmC,KAAI,SAAA1B,GAAO,OAC7B,+BACI,6BAAI,qBAAK2B,IAAK3B,EAAQ4B,QAAQC,UAAWC,IAAK9B,EAAQC,KAAKC,UAC3D,+BAAKF,EAAQC,KAAKC,MAAlB,IAA0BF,EAAQC,KAAKG,QACvC,6BAAKJ,EAAQ+B,QACb,6BAAK/B,EAAQgC,0B,GAxErBC,IAAMC,WCUXC,MATf,WACE,OACE,qCACA,cAAC,EAAD,IACE,cAAC,EAAD,QCHNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.23ce8323.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Jumbotron = () => {\r\n    return (\r\n        <div className=\"jumbotron\">\r\n            <h1 className=\"display-4\">Employee Directory</h1>\r\n            <p className=\"lead\">Search for an employee or sort by name.</p>\r\n            <hr className=\"my-4\"/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Jumbotron","import axios from \"axios\"\r\n\r\nconst obj = {\r\n    getRandomUsers: function() {\r\n      return axios.get(\"https://randomuser.me/api/?results=50&nat=us\")\r\n    }\r\n   };\r\n   export default obj;\r\n   ","import React from 'react'\r\nimport API from '../../utils/API'\r\n\r\nclass Table extends React.Component {\r\n    state = {\r\n        root: [],\r\n        employees: [],\r\n        sort: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUsers()\r\n    }\r\n\r\n    getUsers(){\r\n        API.getRandomUsers()\r\n            .then(res => this.setState({employees: res.data.results}))\r\n            .then(res => this.setState({root: this.state.employees}))\r\n            .then(res => console.log(this.state.employees))\r\n    }\r\n\r\n    changeFunction = event => {\r\n        let search = event.target.value;\r\n\r\n        let newArray = this.state.root.filter(element => element.name.first.includes(search) || element.name.last.includes(search))\r\n        this.setState({employees: newArray})\r\n    }\r\n\r\n    sortByThis=()=>{\r\n        let toBeSorted = this.state.root;\r\n        toBeSorted.sort((elementA, elementB) => {\r\n            let nameA = elementA.name.first.toUpperCase();\r\n            let nameB = elementB.name.first.toUpperCase();\r\n\r\n            if(nameA > nameB) {\r\n                return this.state.sort ? 1 : -1;\r\n            }\r\n            if(nameB > nameA) {\r\n                return this.state.sort ? -1 : 1;\r\n            }\r\n\r\n            return 0;\r\n        })\r\n        this.setState({sort: !this.state.sort})\r\n        this.setState({employees: toBeSorted})\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n            <nav className=\"navbar navbar-dark bg-dark justify-content-center\">\r\n                <form className=\"form-inline\">\r\n                    <input\r\n                    className=\"form-control mr-sm-2\"\r\n                    onChange={this.changeFunction}\r\n                    placeholder=\"Search by name\"\r\n                    />\r\n                </form>\r\n            </nav>\r\n            <table className=\"table table-dark\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Image</th>\r\n                        <th scope=\"col\">Name <button className=\"btn btn-info\" onClick={this.sortByThis}>Sort</button></th>\r\n                        <th scope=\"col\">Phone</th>\r\n                        <th scope=\"col\">Email</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.state.employees.map(element => (\r\n                        <tr>\r\n                            <td><img src={element.picture.thumbnail} alt={element.name.first} /></td>\r\n                            <td>{element.name.first} {element.name.last}</td>\r\n                            <td>{element.phone}</td>\r\n                            <td>{element.email}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Table\r\n","  \nimport Jumbotron from \"./components/Jumbotron\";\nimport Table from \"./components/Table\";\n\nfunction App() {\n  return (\n    <>\n    <Jumbotron />\n      <Table />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}